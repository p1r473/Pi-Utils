#!/bin/bash
SSH_timeout=3
PrimaryHostname="Harbormaster"
SecondaryHostname="Monkeebutt"
JUMPBOX="BlackPearl"
PING_COUNT=$2

# Function to interpret color codes for any command output
colorize_output() {
  awk '{ gsub(/\\e/, "\x1b"); print }'
}

IsHost() {
    local hostname=$(echo "$1" | awk '{print tolower($0)}')
    local hosts_file="/etc/hosts"
    echo "Checking if host $hostname is in hosts file."  # Debug
    if grep -wqi "\b$hostname\b" "$hosts_file"; then
        return 0
    else
        return 1
    fi
}

# Function to determine if an IP address is within a private range
IsPrivateIP() {
    local ip=$1
    if [[ $ip =~ ^10\. || $ip =~ ^172\.(1[6-9]|2[0-9]|3[0-1])\. || $ip =~ ^192\.168\. ]]; then
        return 0 # True, IP is private
    else
        return 1 # False, IP is not private
    fi
}

IsDifferentSubnet() {
    local local_ip=$(hostname -I | awk '{print $1}')
    local target_ip=$(resolve_hostname "$1")
    if [[ -z "$target_ip" ]]; then
        echo "No IP found for $1. Assuming different subnet."
        return 0  # Assume different subnet if no IP could be found
    fi
    local local_subnet=${local_ip%.*}
    local target_subnet=${target_ip%.*}
    #echo "Comparing subnets: local ($local_subnet), target ($target_subnet)"
    if [[ "$local_subnet" != "$target_subnet" ]] && IsPrivateIP "$target_ip"; then
        return 0 # True, different subnet and target IP is private
    else
        return 1 # False, same subnet or target IP is not private
    fi
}

resolve_hostname() {
    # First check if the input is already an IP address
    if [[ "$1" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        echo "$1"
        return 0  # Return success because it's already an IP address
    fi

    # Use nslookup to resolve the hostname
    local resolved_ip=$(nslookup "$1" 2>/dev/null | awk '/^Address: / { if (NR>1) {print $2} }' | tail -n 1)
    
    if [[ -z "$resolved_ip" ]]; then
        echo "Failed to resolve hostname '$1'." >&2
        return 1  # Return failure
    else
        echo "$resolved_ip"
        return 0  # Return success
    fi
}

if [ $# -eq 0 ]; then
    case $HOSTNAME in
        $PrimaryHostname)
            destination="$SecondaryHostname"
            ;;
        $SecondaryHostname)
            destination="$PrimaryHostname"
            ;;
        *)
            echo "No destination specified and unknown hostname." >&2
            exit 1
            ;;
    esac
    echo "Defaulting to $destination"
elif [ $# -gt 0 ]; then
    input_host="$1"
    if [[ "$input_host" =~ @ ]]; then
        input_host=$(echo "$input_host" | awk -F'@' '{print $2}')
    fi

    destination=$(resolve_hostname "$input_host")
    if [ $? -ne 0 ]; then
        echo "Failed to resolve IP. Checking if hostname is known locally."
        if IsHost "$input_host"; then
            destination="$input_host"
            echo "Using local hostname: $destination"
        else
            echo "No destination specified and unknown hostname." >&2
            exit 1
        fi
    fi

    if [ $# -gt 1 ]; then
        shift  # Remove the first argument which is the destination
        command="$@"
    else
        command=""
    fi
else
    echo "No arguments specified." >&2
    exit 1
fi

pingc=""
if [[ -n "$PING_COUNT" ]]; then
    pingc="-c $PING_COUNT "
fi

if IsDifferentSubnet "$destination"; then
     echo "Using jump box: ssh -J $JUMPBOX ${destination} ping $pingc${destination}" >&2
     /usr/bin/ssh -o ConnectTimeout=$SSH_timeout "$JUMPBOX" "ping $pingc${destination}" | colorize_output
else
    /usr/bin/ping "${destination}" | colorize_output
fi